{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/SwapProxy.sol",
    "3": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/SwapProxy.sol",
    "exportedSymbols": {
      "Context": [
        342
      ],
      "IERC20": [
        319
      ],
      "Ownable": [
        241
      ],
      "SwapProxy": [
        131
      ]
    },
    "id": 132,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "./../interfaces/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 320,
        "src": "57:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vichuang/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 242,
        "src": "94:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 241,
              "src": "171:7:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "171:7:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 131,
        "linearizedBaseContracts": [
          131,
          241,
          342
        ],
        "name": "SwapProxy",
        "nameLocation": "158:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SwapProxy.SwapDescription",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "srcToken",
                "nameLocation": "226:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "219:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$319",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 7,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 6,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 319,
                    "src": "219:6:2"
                  },
                  "referencedDeclaration": 319,
                  "src": "219:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$319",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "dstToken",
                "nameLocation": "251:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "244:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$319",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 10,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 319,
                    "src": "244:6:2"
                  },
                  "referencedDeclaration": 319,
                  "src": "244:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$319",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "srcReceiver",
                "nameLocation": "277:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "269:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "dstReceiver",
                "nameLocation": "306:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "298:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "335:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "327:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "minReturnAmount",
                "nameLocation": "359:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "351:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "flags",
                "nameLocation": "392:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "384:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "384:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "permit",
                "nameLocation": "413:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "407:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 22,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "407:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapDescription",
            "nameLocation": "193:15:2",
            "nodeType": "StructDefinition",
            "scope": 131,
            "src": "186:240:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "immutable",
            "name": "AGGREGATION_ROUTER_V3",
            "nameLocation": "450:21:2",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "432:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "432:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "506:47:2",
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "AGGREGATION_ROUTER_V3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "516:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "540:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "516:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "516:30:2"
                }
              ]
            },
            "id": 36,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "498:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "490:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:16:2"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:0:2"
            },
            "scope": 131,
            "src": "478:75:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "627:576:2",
              "statements": [
                {
                  "assignments": [
                    46,
                    49,
                    51
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46,
                      "mutability": "mutable",
                      "name": "_c",
                      "nameLocation": "646:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "638:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "638:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "desc",
                      "nameLocation": "673:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "650:27:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapDescription_$24_memory_ptr",
                        "typeString": "struct SwapProxy.SwapDescription"
                      },
                      "typeName": {
                        "id": 48,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 47,
                          "name": "SwapDescription",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "650:15:2"
                        },
                        "referencedDeclaration": 24,
                        "src": "650:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapDescription_$24_storage_ptr",
                          "typeString": "struct SwapProxy.SwapDescription"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 51,
                      "mutability": "mutable",
                      "name": "_d",
                      "nameLocation": "692:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "679:15:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "679:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 54,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "709:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "709:9:2",
                        "startExpression": {
                          "hexValue": "34",
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "715:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "721:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 57,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "721:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 59,
                            "name": "SwapDescription",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "730:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapDescription_$24_storage_ptr_$",
                              "typeString": "type(struct SwapProxy.SwapDescription storage pointer)"
                            }
                          },
                          {
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "747:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "747:5:2",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 62,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "720:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_struct$_SwapDescription_$24_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(struct SwapProxy.SwapDescription storage pointer),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_struct$_SwapDescription_$24_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(struct SwapProxy.SwapDescription storage pointer),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 52,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "698:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "698:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_struct$_SwapDescription_$24_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,struct SwapProxy.SwapDescription memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "637:117:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "800:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "800:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "820:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapProxy_$131",
                              "typeString": "contract SwapProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapProxy_$131",
                              "typeString": "contract SwapProxy"
                            }
                          ],
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "812:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "812:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "812:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "827:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapDescription_$24_memory_ptr",
                            "typeString": "struct SwapProxy.SwapDescription memory"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "827:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66,
                              "name": "desc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "772:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapDescription_$24_memory_ptr",
                                "typeString": "struct SwapProxy.SwapDescription memory"
                              }
                            },
                            "id": 67,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "srcToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "772:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$319",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$319",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 65,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "765:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$319_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "765:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$319",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "765:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "765:74:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85,
                        "name": "AGGREGATION_ROUTER_V3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "879:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 86,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "902:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapDescription_$24_memory_ptr",
                            "typeString": "struct SwapProxy.SwapDescription memory"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "902:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 81,
                              "name": "desc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "856:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapDescription_$24_memory_ptr",
                                "typeString": "struct SwapProxy.SwapDescription memory"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "srcToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "856:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$319",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$319",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 80,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "849:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$319_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "849:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$319",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 288,
                      "src": "849:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "849:65:2"
                },
                {
                  "assignments": [
                    91,
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "succ",
                      "nameLocation": "931:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "926:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "926:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "950:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "937:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "937:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "995:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 96,
                            "name": "AGGREGATION_ROUTER_V3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "967:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "959:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 94,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "959:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "959:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "925:76:2"
                },
                {
                  "condition": {
                    "id": 102,
                    "name": "succ",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "1015:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "1164:33:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 124,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1178:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1178:8:2"
                      }
                    ]
                  },
                  "id": 128,
                  "nodeType": "IfStatement",
                  "src": "1011:186:2",
                  "trueBody": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "1021:137:2",
                    "statements": [
                      {
                        "assignments": [
                          104,
                          106
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 104,
                            "mutability": "mutable",
                            "name": "returnAmount",
                            "nameLocation": "1041:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 123,
                            "src": "1036:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1036:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 106,
                            "mutability": "mutable",
                            "name": "gasLeft",
                            "nameLocation": "1060:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 123,
                            "src": "1055:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 105,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1055:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 116,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 109,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1082:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1090:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 110,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1090:4:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1096:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 112,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1096:4:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 114,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1089:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(uint256),type(uint256))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(uint256),type(uint256))"
                              }
                            ],
                            "expression": {
                              "id": 107,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1071:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1071:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1071:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1035:67:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 118,
                                "name": "returnAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104,
                                "src": "1124:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 119,
                                "name": "minOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "1140:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1124:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 117,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1116:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1116:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "1116:31:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "bd0625ab",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 43,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "617:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "617:9:2"
              }
            ],
            "name": "swap",
            "nameLocation": "568:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "minOut",
                  "nameLocation": "578:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "573:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "601:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "586:20:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:35:2"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:2"
            },
            "scope": 131,
            "src": "559:644:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 132,
        "src": "149:1056:2",
        "usedErrors": []
      }
    ],
    "src": "32:1173:2"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516108af3803806108af83398101604081905261002f91610085565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060601b6001600160601b0319166080526100b5565b60006020828403121561009757600080fd5b81516001600160a01b03811681146100ae57600080fd5b9392505050565b60805160601c6107d56100da6000396000818161021901526102ab01526107d56000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063bd0625ab1461007a578063f2fde38b1461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b610059610088366004610638565b61011d565b61005961009b3660046104eb565b610364565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca906106e8565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101475760405162461bcd60e51b81526004016100ca906106e8565b600080806101588460048188610747565b810190610165919061050f565b815160808301516040516323b872dd60e01b8152336004820152306024820152604481019190915293965091945092506001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fa9190610616565b508151608083015160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482019290925291169063095ea7b390604401602060405180830381600087803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190610616565b506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031687876040516102e39291906106d8565b6000604051808303816000865af19150503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b5091509150811561004c576000808280602001905181019061034791906106b4565b915091508982101561035857600080fd5b50505050505050505050565b6000546001600160a01b0316331461038e5760405162461bcd60e51b81526004016100ca906106e8565b6001600160a01b0381166103f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b803561045981610787565b919050565b600082601f83011261046f57600080fd5b813567ffffffffffffffff8082111561048a5761048a610771565b604051601f8301601f19908116603f011681019082821181831017156104b2576104b2610771565b816040528381528660208588010111156104cb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156104fd57600080fd5b813561050881610787565b9392505050565b60008060006060848603121561052457600080fd5b833561052f81610787565b9250602084013567ffffffffffffffff8082111561054c57600080fd5b90850190610100828803121561056157600080fd5b61056961071d565b6105728361044e565b81526105806020840161044e565b60208201526105916040840161044e565b60408201526105a26060840161044e565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e0830135828111156105d757600080fd5b6105e38982860161045e565b60e083015250935060408601359150808211156105ff57600080fd5b5061060c8682870161045e565b9150509250925092565b60006020828403121561062857600080fd5b8151801515811461050857600080fd5b60008060006040848603121561064d57600080fd5b83359250602084013567ffffffffffffffff8082111561066c57600080fd5b818601915086601f83011261068057600080fd5b81358181111561068f57600080fd5b8760208285010111156106a157600080fd5b6020830194508093505050509250925092565b600080604083850312156106c757600080fd5b505080516020909101519092909150565b8183823760009101908152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051610100810167ffffffffffffffff8111828210171561074157610741610771565b60405290565b6000808585111561075757600080fd5b8386111561076457600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461079c57600080fd5b5056fea2646970667358221220ecc125b62160369f9a33086669068dd06c4cfce3881c375c01fef2cd217ff7c964736f6c63430008070033",
  "bytecodeSha1": "28e9d26d6a0655d9ad487386488fedd65905afbf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "SwapProxy",
  "coverageMap": {
    "branches": {
      "2": {
        "SwapProxy.swap": {
          "3": [
            1015,
            1019,
            false
          ],
          "4": [
            1124,
            1146,
            true
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "2": {
        "SwapProxy.swap": {
          "0": [
            765,
            839
          ],
          "1": [
            849,
            914
          ],
          "2": [
            1116,
            1147
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063bd0625ab1461007a578063f2fde38b1461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b610059610088366004610638565b61011d565b61005961009b3660046104eb565b610364565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca906106e8565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101475760405162461bcd60e51b81526004016100ca906106e8565b600080806101588460048188610747565b810190610165919061050f565b815160808301516040516323b872dd60e01b8152336004820152306024820152604481019190915293965091945092506001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fa9190610616565b508151608083015160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482019290925291169063095ea7b390604401602060405180830381600087803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190610616565b506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031687876040516102e39291906106d8565b6000604051808303816000865af19150503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b5091509150811561004c576000808280602001905181019061034791906106b4565b915091508982101561035857600080fd5b50505050505050505050565b6000546001600160a01b0316331461038e5760405162461bcd60e51b81526004016100ca906106e8565b6001600160a01b0381166103f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b803561045981610787565b919050565b600082601f83011261046f57600080fd5b813567ffffffffffffffff8082111561048a5761048a610771565b604051601f8301601f19908116603f011681019082821181831017156104b2576104b2610771565b816040528381528660208588010111156104cb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156104fd57600080fd5b813561050881610787565b9392505050565b60008060006060848603121561052457600080fd5b833561052f81610787565b9250602084013567ffffffffffffffff8082111561054c57600080fd5b90850190610100828803121561056157600080fd5b61056961071d565b6105728361044e565b81526105806020840161044e565b60208201526105916040840161044e565b60408201526105a26060840161044e565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e0830135828111156105d757600080fd5b6105e38982860161045e565b60e083015250935060408601359150808211156105ff57600080fd5b5061060c8682870161045e565b9150509250925092565b60006020828403121561062857600080fd5b8151801515811461050857600080fd5b60008060006040848603121561064d57600080fd5b83359250602084013567ffffffffffffffff8082111561066c57600080fd5b818601915086601f83011261068057600080fd5b81358181111561068f57600080fd5b8760208285010111156106a157600080fd5b6020830194508093505050509250925092565b600080604083850312156106c757600080fd5b505080516020909101519092909150565b8183823760009101908152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051610100810167ffffffffffffffff8111828210171561074157610741610771565b60405290565b6000808585111561075757600080fd5b8386111561076457600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461079c57600080fd5b5056fea2646970667358221220ecc125b62160369f9a33086669068dd06c4cfce3881c375c01fef2cd217ff7c964736f6c63430008070033",
  "deployedSourceMap": "149:1056:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:145:0;;;:::i;:::-;;1068:85;1114:7;1140:6;1068:85;;;-1:-1:-1;;;;;1140:6:0;;;4161:51:4;;1068:85:0;;;;;4149:2:4;1068:85:0;;;559:644:2;;;;;;:::i;:::-;;:::i;1994:240:0:-;;;;;;:::i;:::-;;:::i;1700:145::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;559:644:2:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;638:10:2::1;::::0;;709:9:::1;:5:::0;715:1:::1;709:5:::0;;:9:::1;:::i;:::-;698:56;;;;;;;:::i;:::-;772:13:::0;;827:11:::1;::::0;::::1;::::0;765:74:::1;::::0;-1:-1:-1;;;765:74:2;;800:10:::1;765:74;::::0;::::1;4463:34:4::0;820:4:2::1;4513:18:4::0;;;4506:43;4565:18;;;4558:34;;;;637:117:2;;-1:-1:-1;772:13:2;;-1:-1:-1;637:117:2;-1:-1:-1;;;;;;765:34:2::1;::::0;::::1;::::0;4398:18:4;;765:74:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;856:13:2;;902:11:::1;::::0;::::1;::::0;849:65:::1;::::0;-1:-1:-1;;;849:65:2;;-1:-1:-1;;;;;879:21:2::1;4795:32:4::0;;849:65:2::1;::::0;::::1;4777:51:4::0;4844:18;;;4837:34;;;;849:29:2;::::1;::::0;::::1;::::0;4750:18:4;;849:65:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;926:9;937:18:::0;967:21:::1;-1:-1:-1::0;;;;;959:35:2::1;995:5;;959:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:76;;;;1015:4;1011:186;;;1036:17;1055:12:::0;1082:5:::1;1071:31;;;;;;;;;;;;:::i;:::-;1035:67;;;;1140:6;1124:12;:22;;1116:31;;;::::0;::::1;;1021:137;;627:576;;;;;559:644:::0;;;:::o;1994:240:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;5084:2:4;2074:73:0::1;::::0;::::1;5066:21:4::0;5123:2;5103:18;;;5096:30;5162:34;5142:18;;;5135:62;-1:-1:-1;;;5213:18:4;;;5206:36;5259:19;;2074:73:0::1;4882:402:4::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;14:134:4:-;82:20;;111:31;82:20;111:31;:::i;:::-;14:134;;;:::o;153:718::-;195:5;248:3;241:4;233:6;229:17;225:27;215:55;;266:1;263;256:12;215:55;302:6;289:20;328:18;365:2;361;358:10;355:36;;;371:18;;:::i;:::-;446:2;440:9;414:2;500:13;;-1:-1:-1;;496:22:4;;;520:2;492:31;488:40;476:53;;;544:18;;;564:22;;;541:46;538:72;;;590:18;;:::i;:::-;630:10;626:2;619:22;665:2;657:6;650:18;711:3;704:4;699:2;691:6;687:15;683:26;680:35;677:55;;;728:1;725;718:12;677:55;792:2;785:4;777:6;773:17;766:4;758:6;754:17;741:54;839:1;832:4;827:2;819:6;815:15;811:26;804:37;859:6;850:15;;;;;;153:718;;;;:::o;876:247::-;935:6;988:2;976:9;967:7;963:23;959:32;956:52;;;1004:1;1001;994:12;956:52;1043:9;1030:23;1062:31;1087:5;1062:31;:::i;:::-;1112:5;876:247;-1:-1:-1;;;876:247:4:o;1128:1410::-;1253:6;1261;1269;1322:2;1310:9;1301:7;1297:23;1293:32;1290:52;;;1338:1;1335;1328:12;1290:52;1377:9;1364:23;1396:31;1421:5;1396:31;:::i;:::-;1446:5;-1:-1:-1;1502:2:4;1487:18;;1474:32;1525:18;1555:14;;;1552:34;;;1582:1;1579;1572:12;1552:34;1605:22;;;;1661:6;1643:16;;;1639:29;1636:49;;;1681:1;1678;1671:12;1636:49;1709:17;;:::i;:::-;1751:22;1770:2;1751:22;:::i;:::-;1742:7;1735:39;1808:31;1835:2;1831;1827:11;1808:31;:::i;:::-;1803:2;1794:7;1790:16;1783:57;1874:31;1901:2;1897;1893:11;1874:31;:::i;:::-;1869:2;1860:7;1856:16;1849:57;1940:31;1967:2;1963;1959:11;1940:31;:::i;:::-;1935:2;1926:7;1922:16;1915:57;2028:3;2024:2;2020:12;2007:26;2001:3;1992:7;1988:17;1981:53;2090:3;2086:2;2082:12;2069:26;2063:3;2054:7;2050:17;2043:53;2152:3;2148:2;2144:12;2131:26;2125:3;2116:7;2112:17;2105:53;2204:3;2200:2;2196:12;2183:26;2234:2;2224:8;2221:16;2218:36;;;2250:1;2247;2240:12;2218:36;2289:44;2325:7;2314:8;2310:2;2306:17;2289:44;:::i;:::-;2283:3;2270:17;;2263:71;-1:-1:-1;2274:7:4;-1:-1:-1;2413:2:4;2398:18;;2385:32;;-1:-1:-1;2429:16:4;;;2426:36;;;2458:1;2455;2448:12;2426:36;;2481:51;2524:7;2513:8;2502:9;2498:24;2481:51;:::i;:::-;2471:61;;;1128:1410;;;;;:::o;2543:277::-;2610:6;2663:2;2651:9;2642:7;2638:23;2634:32;2631:52;;;2679:1;2676;2669:12;2631:52;2711:9;2705:16;2764:5;2757:13;2750:21;2743:5;2740:32;2730:60;;2786:1;2783;2776:12;2825:659;2904:6;2912;2920;2973:2;2961:9;2952:7;2948:23;2944:32;2941:52;;;2989:1;2986;2979:12;2941:52;3025:9;3012:23;3002:33;;3086:2;3075:9;3071:18;3058:32;3109:18;3150:2;3142:6;3139:14;3136:34;;;3166:1;3163;3156:12;3136:34;3204:6;3193:9;3189:22;3179:32;;3249:7;3242:4;3238:2;3234:13;3230:27;3220:55;;3271:1;3268;3261:12;3220:55;3311:2;3298:16;3337:2;3329:6;3326:14;3323:34;;;3353:1;3350;3343:12;3323:34;3398:7;3393:2;3384:6;3380:2;3376:15;3372:24;3369:37;3366:57;;;3419:1;3416;3409:12;3366:57;3450:2;3446;3442:11;3432:21;;3472:6;3462:16;;;;;2825:659;;;;;:::o;3489:245::-;3568:6;3576;3629:2;3617:9;3608:7;3604:23;3600:32;3597:52;;;3645:1;3642;3635:12;3597:52;-1:-1:-1;;3668:16:4;;3724:2;3709:18;;;3703:25;3668:16;;3703:25;;-1:-1:-1;3489:245:4:o;3739:271::-;3922:6;3914;3909:3;3896:33;3878:3;3948:16;;3973:13;;;3948:16;3739:271;-1:-1:-1;3739:271:4:o;5289:356::-;5491:2;5473:21;;;5510:18;;;5503:30;5569:34;5564:2;5549:18;;5542:62;5636:2;5621:18;;5289:356::o;5650:250::-;5717:2;5711:9;5759:6;5747:19;;5796:18;5781:34;;5817:22;;;5778:62;5775:88;;;5843:18;;:::i;:::-;5879:2;5872:22;5650:250;:::o;5905:331::-;6010:9;6021;6063:8;6051:10;6048:24;6045:44;;;6085:1;6082;6075:12;6045:44;6114:6;6104:8;6101:20;6098:40;;;6134:1;6131;6124:12;6098:40;-1:-1:-1;;6160:23:4;;;6205:25;;;;;-1:-1:-1;5905:331:4:o;6241:127::-;6302:10;6297:3;6293:20;6290:1;6283:31;6333:4;6330:1;6323:15;6357:4;6354:1;6347:15;6373:131;-1:-1:-1;;;;;6448:31:4;;6438:42;;6428:70;;6494:1;6491;6484:12;6428:70;6373:131;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    149,
    1205
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD0625AB EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x59 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x158 DUP5 PUSH1 0x4 DUP2 DUP9 PUSH2 0x747 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x50F JUMP JUMPDEST DUP2 MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP3 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP10 DUP3 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x459 DUP2 PUSH2 0x787 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x48A JUMPI PUSH2 0x48A PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x771 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x508 DUP2 PUSH2 0x787 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x52F DUP2 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP6 ADD SWAP1 PUSH2 0x100 DUP3 DUP9 SUB SLT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x569 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x572 DUP4 PUSH2 0x44E JUMP JUMPDEST DUP2 MSTORE PUSH2 0x580 PUSH1 0x20 DUP5 ADD PUSH2 0x44E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x591 PUSH1 0x40 DUP5 ADD PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x5A2 PUSH1 0x60 DUP5 ADD PUSH2 0x44E JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E3 DUP10 DUP3 DUP7 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60C DUP7 DUP3 DUP8 ADD PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x741 JUMPI PUSH2 0x741 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xC1 0x25 0xB6 0x21 PUSH1 0x36 SWAP16 SWAP11 CALLER ADDMOD PUSH7 0x69068DD06C4CFC 0xE3 DUP9 SHR CALLDATACOPY 0x5C ADD INVALID CALLCODE 0xCD 0x21 PUSH32 0xF7C964736F6C6343000807003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "EQ",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBD0625AB"
    },
    "60": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A"
    },
    "64": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D"
    },
    "75": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        149,
        1205
      ],
      "op": "REVERT",
      "path": "2"
    },
    "81": {
      "op": "JUMPDEST"
    },
    "82": {
      "op": "PUSH2",
      "value": "0x59"
    },
    "85": {
      "op": "PUSH2",
      "value": "0xA0"
    },
    "88": {
      "jump": "i",
      "op": "JUMP"
    },
    "89": {
      "op": "JUMPDEST"
    },
    "90": {
      "op": "STOP"
    },
    "91": {
      "op": "JUMPDEST"
    },
    "92": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "94": {
      "op": "SLOAD"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "97": {
      "op": "DUP1"
    },
    "98": {
      "op": "MLOAD"
    },
    "99": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "105": {
      "op": "SHL"
    },
    "106": {
      "op": "SUB"
    },
    "107": {
      "op": "SWAP1"
    },
    "108": {
      "op": "SWAP3"
    },
    "109": {
      "op": "AND"
    },
    "110": {
      "op": "DUP3"
    },
    "111": {
      "op": "MSTORE"
    },
    "112": {
      "op": "MLOAD"
    },
    "113": {
      "op": "SWAP1"
    },
    "114": {
      "op": "DUP2"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "SUB"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "119": {
      "op": "ADD"
    },
    "120": {
      "op": "SWAP1"
    },
    "121": {
      "op": "RETURN"
    },
    "122": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "123": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "126": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88"
    },
    "129": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "130": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "132": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x638"
    },
    "135": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        559,
        1203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "136": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "137": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11D"
    },
    "140": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        559,
        1203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "141": {
      "op": "JUMPDEST"
    },
    "142": {
      "op": "PUSH2",
      "value": "0x59"
    },
    "145": {
      "op": "PUSH2",
      "value": "0x9B"
    },
    "148": {
      "op": "CALLDATASIZE"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "151": {
      "op": "PUSH2",
      "value": "0x4EB"
    },
    "154": {
      "jump": "i",
      "op": "JUMP"
    },
    "155": {
      "op": "JUMPDEST"
    },
    "156": {
      "op": "PUSH2",
      "value": "0x364"
    },
    "159": {
      "jump": "i",
      "op": "JUMP"
    },
    "160": {
      "op": "JUMPDEST"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "163": {
      "op": "SLOAD"
    },
    "164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "170": {
      "op": "SHL"
    },
    "171": {
      "op": "SUB"
    },
    "172": {
      "op": "AND"
    },
    "173": {
      "op": "CALLER"
    },
    "174": {
      "op": "EQ"
    },
    "175": {
      "op": "PUSH2",
      "value": "0xD3"
    },
    "178": {
      "op": "JUMPI"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "181": {
      "op": "MLOAD"
    },
    "182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "188": {
      "op": "SHL"
    },
    "189": {
      "op": "DUP2"
    },
    "190": {
      "op": "MSTORE"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "193": {
      "op": "ADD"
    },
    "194": {
      "op": "PUSH2",
      "value": "0xCA"
    },
    "197": {
      "op": "SWAP1"
    },
    "198": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "201": {
      "jump": "i",
      "op": "JUMP"
    },
    "202": {
      "op": "JUMPDEST"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "205": {
      "op": "MLOAD"
    },
    "206": {
      "op": "DUP1"
    },
    "207": {
      "op": "SWAP2"
    },
    "208": {
      "op": "SUB"
    },
    "209": {
      "op": "SWAP1"
    },
    "210": {
      "op": "REVERT"
    },
    "211": {
      "op": "JUMPDEST"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "214": {
      "op": "DUP1"
    },
    "215": {
      "op": "SLOAD"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "218": {
      "op": "MLOAD"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "225": {
      "op": "SHL"
    },
    "226": {
      "op": "SUB"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "SWAP2"
    },
    "229": {
      "op": "AND"
    },
    "230": {
      "op": "SWAP1"
    },
    "231": {
      "op": "PUSH32",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "264": {
      "op": "SWAP1"
    },
    "265": {
      "op": "DUP4"
    },
    "266": {
      "op": "SWAP1"
    },
    "267": {
      "op": "LOG3"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "270": {
      "op": "DUP1"
    },
    "271": {
      "op": "SLOAD"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "278": {
      "op": "SHL"
    },
    "279": {
      "op": "SUB"
    },
    "280": {
      "op": "NOT"
    },
    "281": {
      "op": "AND"
    },
    "282": {
      "op": "SWAP1"
    },
    "283": {
      "op": "SSTORE"
    },
    "284": {
      "jump": "o",
      "op": "JUMP"
    },
    "285": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "288": {
      "op": "SLOAD"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "op": "AND"
    },
    "298": {
      "op": "CALLER"
    },
    "299": {
      "op": "EQ"
    },
    "300": {
      "op": "PUSH2",
      "value": "0x147"
    },
    "303": {
      "op": "JUMPI"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "306": {
      "op": "MLOAD"
    },
    "307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "op": "PUSH2",
      "value": "0xCA"
    },
    "322": {
      "op": "SWAP1"
    },
    "323": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "326": {
      "jump": "i",
      "op": "JUMP"
    },
    "327": {
      "op": "JUMPDEST"
    },
    "328": {
      "fn": "SwapProxy.swap",
      "offset": [
        638,
        648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "330": {
      "fn": "SwapProxy.swap",
      "offset": [
        638,
        648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "331": {
      "fn": "SwapProxy.swap",
      "offset": [
        638,
        648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "332": {
      "fn": "SwapProxy.swap",
      "offset": [
        709,
        718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x158"
    },
    "335": {
      "fn": "SwapProxy.swap",
      "offset": [
        709,
        714
      ],
      "op": "DUP5",
      "path": "2"
    },
    "336": {
      "fn": "SwapProxy.swap",
      "offset": [
        715,
        716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "338": {
      "fn": "SwapProxy.swap",
      "offset": [
        709,
        714
      ],
      "op": "DUP2",
      "path": "2"
    },
    "339": {
      "fn": "SwapProxy.swap",
      "offset": [
        709,
        714
      ],
      "op": "DUP9",
      "path": "2"
    },
    "340": {
      "fn": "SwapProxy.swap",
      "offset": [
        709,
        718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x747"
    },
    "343": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        709,
        718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "344": {
      "fn": "SwapProxy.swap",
      "offset": [
        709,
        718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "345": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "346": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "ADD",
      "path": "2"
    },
    "347": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "348": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165"
    },
    "351": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "352": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "353": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50F"
    },
    "356": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        698,
        754
      ],
      "op": "JUMP",
      "path": "2"
    },
    "357": {
      "fn": "SwapProxy.swap",
      "offset": [
        698,
        754
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "358": {
      "fn": "SwapProxy.swap",
      "offset": [
        772,
        785
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 0
    },
    "359": {
      "fn": "SwapProxy.swap",
      "offset": [
        772,
        785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "360": {
      "fn": "SwapProxy.swap",
      "offset": [
        827,
        838
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "362": {
      "fn": "SwapProxy.swap",
      "offset": [
        827,
        838
      ],
      "op": "DUP4",
      "path": "2"
    },
    "363": {
      "fn": "SwapProxy.swap",
      "offset": [
        827,
        838
      ],
      "op": "ADD",
      "path": "2"
    },
    "364": {
      "fn": "SwapProxy.swap",
      "offset": [
        827,
        838
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "365": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "367": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "368": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "375": {
      "op": "SHL"
    },
    "376": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP2",
      "path": "2"
    },
    "377": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "378": {
      "fn": "SwapProxy.swap",
      "offset": [
        800,
        810
      ],
      "op": "CALLER",
      "path": "2"
    },
    "379": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "381": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP3",
      "path": "2"
    },
    "382": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ADD",
      "path": "2"
    },
    "383": {
      "op": "MSTORE"
    },
    "384": {
      "fn": "SwapProxy.swap",
      "offset": [
        820,
        824
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "387": {
      "op": "DUP3"
    },
    "388": {
      "op": "ADD"
    },
    "389": {
      "op": "MSTORE"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "392": {
      "op": "DUP2"
    },
    "393": {
      "op": "ADD"
    },
    "394": {
      "op": "SWAP2"
    },
    "395": {
      "op": "SWAP1"
    },
    "396": {
      "op": "SWAP2"
    },
    "397": {
      "op": "MSTORE"
    },
    "398": {
      "fn": "SwapProxy.swap",
      "offset": [
        637,
        754
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "399": {
      "fn": "SwapProxy.swap",
      "offset": [
        637,
        754
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "400": {
      "op": "POP"
    },
    "401": {
      "fn": "SwapProxy.swap",
      "offset": [
        772,
        785
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "402": {
      "fn": "SwapProxy.swap",
      "offset": [
        772,
        785
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "403": {
      "op": "POP"
    },
    "404": {
      "fn": "SwapProxy.swap",
      "offset": [
        637,
        754
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "405": {
      "op": "POP"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        799
      ],
      "op": "AND",
      "path": "2"
    },
    "415": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "416": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        799
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "421": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "424": {
      "op": "ADD"
    },
    "425": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "427": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "429": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "430": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "431": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP4",
      "path": "2"
    },
    "432": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "SUB",
      "path": "2"
    },
    "433": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP2",
      "path": "2"
    },
    "434": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "436": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP8",
      "path": "2"
    },
    "437": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "438": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "439": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "440": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "441": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "442": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "445": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "446": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "448": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "449": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "REVERT",
      "path": "2"
    },
    "450": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "451": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "POP",
      "path": "2"
    },
    "452": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "GAS",
      "path": "2"
    },
    "453": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "CALL",
      "path": "2"
    },
    "454": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "455": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "456": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "457": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D6"
    },
    "460": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "461": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "462": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "464": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "465": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "466": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "467": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "469": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "REVERT",
      "path": "2"
    },
    "470": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "471": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "POP",
      "path": "2"
    },
    "472": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "POP",
      "path": "2"
    },
    "473": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "POP",
      "path": "2"
    },
    "474": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "POP",
      "path": "2"
    },
    "475": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "477": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "478": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "479": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "481": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "NOT",
      "path": "2"
    },
    "482": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "484": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP3",
      "path": "2"
    },
    "485": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ADD",
      "path": "2"
    },
    "486": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "AND",
      "path": "2"
    },
    "487": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP3",
      "path": "2"
    },
    "488": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ADD",
      "path": "2"
    },
    "489": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP1",
      "path": "2"
    },
    "490": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "492": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "493": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "POP",
      "path": "2"
    },
    "494": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "DUP2",
      "path": "2"
    },
    "495": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "ADD",
      "path": "2"
    },
    "496": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "497": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "500": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "501": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "502": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x616"
    },
    "505": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        765,
        839
      ],
      "op": "JUMP",
      "path": "2"
    },
    "506": {
      "fn": "SwapProxy.swap",
      "offset": [
        765,
        839
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "SwapProxy.swap",
      "offset": [
        856,
        869
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 1
    },
    "509": {
      "fn": "SwapProxy.swap",
      "offset": [
        856,
        869
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "510": {
      "fn": "SwapProxy.swap",
      "offset": [
        902,
        913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "512": {
      "fn": "SwapProxy.swap",
      "offset": [
        902,
        913
      ],
      "op": "DUP4",
      "path": "2"
    },
    "513": {
      "fn": "SwapProxy.swap",
      "offset": [
        902,
        913
      ],
      "op": "ADD",
      "path": "2"
    },
    "514": {
      "fn": "SwapProxy.swap",
      "offset": [
        902,
        913
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "515": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "517": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "518": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "527": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "SUB"
    },
    "536": {
      "fn": "SwapProxy.swap",
      "offset": [
        879,
        900
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "569": {
      "op": "DUP2"
    },
    "570": {
      "op": "AND"
    },
    "571": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "573": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP4",
      "path": "2"
    },
    "574": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ADD",
      "path": "2"
    },
    "575": {
      "op": "MSTORE"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "578": {
      "op": "DUP3"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "SWAP3"
    },
    "581": {
      "op": "SWAP1"
    },
    "582": {
      "op": "SWAP3"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "585": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        878
      ],
      "op": "AND",
      "path": "2"
    },
    "586": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "587": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        878
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "592": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "598": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "600": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "601": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "602": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP4",
      "path": "2"
    },
    "603": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "SUB",
      "path": "2"
    },
    "604": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "605": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "607": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP8",
      "path": "2"
    },
    "608": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "609": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "610": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "611": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "612": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "613": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D"
    },
    "616": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "617": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "619": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "620": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "REVERT",
      "path": "2"
    },
    "621": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "622": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "623": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "GAS",
      "path": "2"
    },
    "624": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "CALL",
      "path": "2"
    },
    "625": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "626": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "627": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "628": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "631": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "632": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "633": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "635": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "636": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "637": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "638": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "640": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "REVERT",
      "path": "2"
    },
    "641": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "643": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "644": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "645": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "646": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "648": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "649": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "650": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "652": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "NOT",
      "path": "2"
    },
    "653": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "655": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP3",
      "path": "2"
    },
    "656": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ADD",
      "path": "2"
    },
    "657": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "AND",
      "path": "2"
    },
    "658": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP3",
      "path": "2"
    },
    "659": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ADD",
      "path": "2"
    },
    "660": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "661": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "663": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "664": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "665": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "666": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "ADD",
      "path": "2"
    },
    "667": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "668": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A5"
    },
    "671": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "672": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "673": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x616"
    },
    "676": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        849,
        914
      ],
      "op": "JUMP",
      "path": "2"
    },
    "677": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "678": {
      "fn": "SwapProxy.swap",
      "offset": [
        849,
        914
      ],
      "op": "POP",
      "path": "2"
    },
    "679": {
      "fn": "SwapProxy.swap",
      "offset": [
        926,
        935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "681": {
      "fn": "SwapProxy.swap",
      "offset": [
        937,
        955
      ],
      "op": "DUP1",
      "path": "2"
    },
    "682": {
      "fn": "SwapProxy.swap",
      "offset": [
        967,
        988
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "721": {
      "op": "SHL"
    },
    "722": {
      "op": "SUB"
    },
    "723": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        994
      ],
      "op": "AND",
      "path": "2"
    },
    "724": {
      "fn": "SwapProxy.swap",
      "offset": [
        995,
        1000
      ],
      "op": "DUP8",
      "path": "2"
    },
    "725": {
      "fn": "SwapProxy.swap",
      "offset": [
        995,
        1000
      ],
      "op": "DUP8",
      "path": "2"
    },
    "726": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "728": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "729": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E3"
    },
    "732": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "733": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "734": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "735": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D8"
    },
    "738": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        959,
        1001
      ],
      "op": "JUMP",
      "path": "2"
    },
    "739": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "740": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "742": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "744": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "745": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP1",
      "path": "2"
    },
    "746": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP4",
      "path": "2"
    },
    "747": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SUB",
      "path": "2"
    },
    "748": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP2",
      "path": "2"
    },
    "749": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "751": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP7",
      "path": "2"
    },
    "752": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "GAS",
      "path": "2"
    },
    "753": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "CALL",
      "path": "2"
    },
    "754": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "755": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "756": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "757": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "758": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP1",
      "path": "2"
    },
    "759": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "761": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP2",
      "path": "2"
    },
    "762": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "EQ",
      "path": "2"
    },
    "763": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x320"
    },
    "766": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "767": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "769": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "770": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "771": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "772": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "774": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "NOT",
      "path": "2"
    },
    "775": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "777": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "778": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "ADD",
      "path": "2"
    },
    "779": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "AND",
      "path": "2"
    },
    "780": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP3",
      "path": "2"
    },
    "781": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "ADD",
      "path": "2"
    },
    "782": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "784": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "785": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "786": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP3",
      "path": "2"
    },
    "787": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "788": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "789": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "791": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "793": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "DUP5",
      "path": "2"
    },
    "794": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "ADD",
      "path": "2"
    },
    "795": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "796": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x325"
    },
    "799": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "JUMP",
      "path": "2"
    },
    "800": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "801": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "803": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "804": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "805": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "806": {
      "fn": "SwapProxy.swap",
      "offset": [
        959,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "807": {
      "fn": "SwapProxy.swap",
      "offset": [
        925,
        1001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "808": {
      "fn": "SwapProxy.swap",
      "offset": [
        925,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "809": {
      "fn": "SwapProxy.swap",
      "offset": [
        925,
        1001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "810": {
      "fn": "SwapProxy.swap",
      "offset": [
        925,
        1001
      ],
      "op": "POP",
      "path": "2"
    },
    "811": {
      "branch": 3,
      "fn": "SwapProxy.swap",
      "offset": [
        1015,
        1019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "812": {
      "fn": "SwapProxy.swap",
      "offset": [
        1011,
        1197
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "813": {
      "fn": "SwapProxy.swap",
      "offset": [
        1011,
        1197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C"
    },
    "816": {
      "branch": 3,
      "fn": "SwapProxy.swap",
      "jump_revert": true,
      "offset": [
        1178,
        1186
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "817": {
      "fn": "SwapProxy.swap",
      "offset": [
        1036,
        1053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "819": {
      "fn": "SwapProxy.swap",
      "offset": [
        1055,
        1067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "820": {
      "fn": "SwapProxy.swap",
      "offset": [
        1082,
        1087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "821": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "DUP1",
      "path": "2"
    },
    "822": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "824": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "ADD",
      "path": "2"
    },
    "825": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "826": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "827": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "DUP2",
      "path": "2"
    },
    "828": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "ADD",
      "path": "2"
    },
    "829": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "830": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x347"
    },
    "833": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "834": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B4"
    },
    "838": {
      "fn": "SwapProxy.swap",
      "jump": "i",
      "offset": [
        1071,
        1102
      ],
      "op": "JUMP",
      "path": "2"
    },
    "839": {
      "fn": "SwapProxy.swap",
      "offset": [
        1071,
        1102
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "840": {
      "fn": "SwapProxy.swap",
      "offset": [
        1035,
        1102
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "841": {
      "fn": "SwapProxy.swap",
      "offset": [
        1035,
        1102
      ],
      "op": "POP",
      "path": "2"
    },
    "842": {
      "fn": "SwapProxy.swap",
      "offset": [
        1035,
        1102
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "843": {
      "fn": "SwapProxy.swap",
      "offset": [
        1035,
        1102
      ],
      "op": "POP",
      "path": "2"
    },
    "844": {
      "fn": "SwapProxy.swap",
      "offset": [
        1140,
        1146
      ],
      "op": "DUP10",
      "path": "2",
      "statement": 2
    },
    "845": {
      "fn": "SwapProxy.swap",
      "offset": [
        1124,
        1136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "846": {
      "fn": "SwapProxy.swap",
      "offset": [
        1124,
        1146
      ],
      "op": "LT",
      "path": "2"
    },
    "847": {
      "branch": 4,
      "fn": "SwapProxy.swap",
      "offset": [
        1124,
        1146
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "848": {
      "fn": "SwapProxy.swap",
      "offset": [
        1116,
        1147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "851": {
      "branch": 4,
      "fn": "SwapProxy.swap",
      "offset": [
        1116,
        1147
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "852": {
      "fn": "SwapProxy.swap",
      "offset": [
        1116,
        1147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "854": {
      "fn": "SwapProxy.swap",
      "offset": [
        1116,
        1147
      ],
      "op": "DUP1",
      "path": "2"
    },
    "855": {
      "fn": "SwapProxy.swap",
      "offset": [
        1116,
        1147
      ],
      "op": "REVERT",
      "path": "2"
    },
    "856": {
      "fn": "SwapProxy.swap",
      "offset": [
        1116,
        1147
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "857": {
      "fn": "SwapProxy.swap",
      "offset": [
        1021,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "858": {
      "fn": "SwapProxy.swap",
      "offset": [
        1021,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "859": {
      "fn": "SwapProxy.swap",
      "offset": [
        627,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "860": {
      "fn": "SwapProxy.swap",
      "offset": [
        627,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "861": {
      "fn": "SwapProxy.swap",
      "offset": [
        627,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "862": {
      "fn": "SwapProxy.swap",
      "offset": [
        627,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "863": {
      "fn": "SwapProxy.swap",
      "offset": [
        627,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "864": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "865": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "866": {
      "fn": "SwapProxy.swap",
      "offset": [
        559,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "867": {
      "fn": "SwapProxy.swap",
      "jump": "o",
      "offset": [
        559,
        1203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "868": {
      "op": "JUMPDEST"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "871": {
      "op": "SLOAD"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "op": "SUB"
    },
    "880": {
      "op": "AND"
    },
    "881": {
      "op": "CALLER"
    },
    "882": {
      "op": "EQ"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x38E"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "889": {
      "op": "MLOAD"
    },
    "890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "DUP2"
    },
    "898": {
      "op": "MSTORE"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "901": {
      "op": "ADD"
    },
    "902": {
      "op": "PUSH2",
      "value": "0xCA"
    },
    "905": {
      "op": "SWAP1"
    },
    "906": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "909": {
      "jump": "i",
      "op": "JUMP"
    },
    "910": {
      "op": "JUMPDEST"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "op": "SUB"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "AND"
    },
    "921": {
      "op": "PUSH2",
      "value": "0x3F3"
    },
    "924": {
      "op": "JUMPI"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "927": {
      "op": "MLOAD"
    },
    "928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "MSTORE"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "941": {
      "op": "DUP3"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "948": {
      "op": "DUP3"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0xCA"
    },
    "1010": {
      "op": "JUMP"
    },
    "1011": {
      "op": "JUMPDEST"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1014": {
      "op": "DUP1"
    },
    "1015": {
      "op": "SLOAD"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1018": {
      "op": "MLOAD"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "op": "DUP6"
    },
    "1029": {
      "op": "AND"
    },
    "1030": {
      "op": "SWAP4"
    },
    "1031": {
      "op": "SWAP3"
    },
    "1032": {
      "op": "AND"
    },
    "1033": {
      "op": "SWAP2"
    },
    "1034": {
      "op": "PUSH32",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1067": {
      "op": "SWAP2"
    },
    "1068": {
      "op": "LOG3"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1071": {
      "op": "DUP1"
    },
    "1072": {
      "op": "SLOAD"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1079": {
      "op": "SHL"
    },
    "1080": {
      "op": "SUB"
    },
    "1081": {
      "op": "NOT"
    },
    "1082": {
      "op": "AND"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "op": "SWAP3"
    },
    "1092": {
      "op": "SWAP1"
    },
    "1093": {
      "op": "SWAP3"
    },
    "1094": {
      "op": "AND"
    },
    "1095": {
      "op": "SWAP2"
    },
    "1096": {
      "op": "SWAP1"
    },
    "1097": {
      "op": "SWAP2"
    },
    "1098": {
      "op": "OR"
    },
    "1099": {
      "op": "SWAP1"
    },
    "1100": {
      "op": "SSTORE"
    },
    "1101": {
      "jump": "o",
      "op": "JUMP"
    },
    "1102": {
      "op": "JUMPDEST"
    },
    "1103": {
      "op": "DUP1"
    },
    "1104": {
      "op": "CALLDATALOAD"
    },
    "1105": {
      "op": "PUSH2",
      "value": "0x459"
    },
    "1108": {
      "op": "DUP2"
    },
    "1109": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1112": {
      "jump": "i",
      "op": "JUMP"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "op": "SWAP2"
    },
    "1115": {
      "op": "SWAP1"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "jump": "o",
      "op": "JUMP"
    },
    "1118": {
      "op": "JUMPDEST"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "DUP3"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1124": {
      "op": "DUP4"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "op": "SLT"
    },
    "1127": {
      "op": "PUSH2",
      "value": "0x46F"
    },
    "1130": {
      "op": "JUMPI"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1133": {
      "op": "DUP1"
    },
    "1134": {
      "op": "REVERT"
    },
    "1135": {
      "op": "JUMPDEST"
    },
    "1136": {
      "op": "DUP2"
    },
    "1137": {
      "op": "CALLDATALOAD"
    },
    "1138": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "GT"
    },
    "1150": {
      "op": "ISZERO"
    },
    "1151": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1154": {
      "op": "JUMPI"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1158": {
      "op": "PUSH2",
      "value": "0x771"
    },
    "1161": {
      "jump": "i",
      "op": "JUMP"
    },
    "1162": {
      "op": "JUMPDEST"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1165": {
      "op": "MLOAD"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1168": {
      "op": "DUP4"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1172": {
      "op": "NOT"
    },
    "1173": {
      "op": "SWAP1"
    },
    "1174": {
      "op": "DUP2"
    },
    "1175": {
      "op": "AND"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "AND"
    },
    "1180": {
      "op": "DUP2"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "op": "SWAP1"
    },
    "1183": {
      "op": "DUP3"
    },
    "1184": {
      "op": "DUP3"
    },
    "1185": {
      "op": "GT"
    },
    "1186": {
      "op": "DUP2"
    },
    "1187": {
      "op": "DUP4"
    },
    "1188": {
      "op": "LT"
    },
    "1189": {
      "op": "OR"
    },
    "1190": {
      "op": "ISZERO"
    },
    "1191": {
      "op": "PUSH2",
      "value": "0x4B2"
    },
    "1194": {
      "op": "JUMPI"
    },
    "1195": {
      "op": "PUSH2",
      "value": "0x4B2"
    },
    "1198": {
      "op": "PUSH2",
      "value": "0x771"
    },
    "1201": {
      "jump": "i",
      "op": "JUMP"
    },
    "1202": {
      "op": "JUMPDEST"
    },
    "1203": {
      "op": "DUP2"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "op": "DUP4"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "DUP7"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1213": {
      "op": "DUP6"
    },
    "1214": {
      "op": "DUP9"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "GT"
    },
    "1218": {
      "op": "ISZERO"
    },
    "1219": {
      "op": "PUSH2",
      "value": "0x4CB"
    },
    "1222": {
      "op": "JUMPI"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1225": {
      "op": "DUP1"
    },
    "1226": {
      "op": "REVERT"
    },
    "1227": {
      "op": "JUMPDEST"
    },
    "1228": {
      "op": "DUP4"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1231": {
      "op": "DUP8"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1235": {
      "op": "DUP4"
    },
    "1236": {
      "op": "ADD"
    },
    "1237": {
      "op": "CALLDATACOPY"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1242": {
      "op": "DUP6"
    },
    "1243": {
      "op": "DUP4"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "ADD"
    },
    "1246": {
      "op": "MSTORE"
    },
    "1247": {
      "op": "DUP1"
    },
    "1248": {
      "op": "SWAP5"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "op": "SWAP3"
    },
    "1255": {
      "op": "SWAP2"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "jump": "o",
      "op": "JUMP"
    },
    "1259": {
      "op": "JUMPDEST"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1264": {
      "op": "DUP3"
    },
    "1265": {
      "op": "DUP5"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "op": "SLT"
    },
    "1268": {
      "op": "ISZERO"
    },
    "1269": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1272": {
      "op": "JUMPI"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "op": "REVERT"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "DUP2"
    },
    "1279": {
      "op": "CALLDATALOAD"
    },
    "1280": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1283": {
      "op": "DUP2"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1287": {
      "jump": "i",
      "op": "JUMP"
    },
    "1288": {
      "op": "JUMPDEST"
    },
    "1289": {
      "op": "SWAP4"
    },
    "1290": {
      "op": "SWAP3"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "jump": "o",
      "op": "JUMP"
    },
    "1295": {
      "op": "JUMPDEST"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1298": {
      "op": "DUP1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1303": {
      "op": "DUP5"
    },
    "1304": {
      "op": "DUP7"
    },
    "1305": {
      "op": "SUB"
    },
    "1306": {
      "op": "SLT"
    },
    "1307": {
      "op": "ISZERO"
    },
    "1308": {
      "op": "PUSH2",
      "value": "0x524"
    },
    "1311": {
      "op": "JUMPI"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1314": {
      "op": "DUP1"
    },
    "1315": {
      "op": "REVERT"
    },
    "1316": {
      "op": "JUMPDEST"
    },
    "1317": {
      "op": "DUP4"
    },
    "1318": {
      "op": "CALLDATALOAD"
    },
    "1319": {
      "op": "PUSH2",
      "value": "0x52F"
    },
    "1322": {
      "op": "DUP2"
    },
    "1323": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1326": {
      "jump": "i",
      "op": "JUMP"
    },
    "1327": {
      "op": "JUMPDEST"
    },
    "1328": {
      "op": "SWAP3"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "op": "DUP5"
    },
    "1333": {
      "op": "ADD"
    },
    "1334": {
      "op": "CALLDATALOAD"
    },
    "1335": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1344": {
      "op": "DUP1"
    },
    "1345": {
      "op": "DUP3"
    },
    "1346": {
      "op": "GT"
    },
    "1347": {
      "op": "ISZERO"
    },
    "1348": {
      "op": "PUSH2",
      "value": "0x54C"
    },
    "1351": {
      "op": "JUMPI"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1354": {
      "op": "DUP1"
    },
    "1355": {
      "op": "REVERT"
    },
    "1356": {
      "op": "JUMPDEST"
    },
    "1357": {
      "op": "SWAP1"
    },
    "1358": {
      "op": "DUP6"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "op": "SWAP1"
    },
    "1361": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "DUP9"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "op": "SLT"
    },
    "1368": {
      "op": "ISZERO"
    },
    "1369": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1372": {
      "op": "JUMPI"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1375": {
      "op": "DUP1"
    },
    "1376": {
      "op": "REVERT"
    },
    "1377": {
      "op": "JUMPDEST"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x569"
    },
    "1381": {
      "op": "PUSH2",
      "value": "0x71D"
    },
    "1384": {
      "jump": "i",
      "op": "JUMP"
    },
    "1385": {
      "op": "JUMPDEST"
    },
    "1386": {
      "op": "PUSH2",
      "value": "0x572"
    },
    "1389": {
      "op": "DUP4"
    },
    "1390": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1393": {
      "jump": "i",
      "op": "JUMP"
    },
    "1394": {
      "op": "JUMPDEST"
    },
    "1395": {
      "op": "DUP2"
    },
    "1396": {
      "op": "MSTORE"
    },
    "1397": {
      "op": "PUSH2",
      "value": "0x580"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1402": {
      "op": "DUP5"
    },
    "1403": {
      "op": "ADD"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1407": {
      "jump": "i",
      "op": "JUMP"
    },
    "1408": {
      "op": "JUMPDEST"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1411": {
      "op": "DUP3"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "op": "PUSH2",
      "value": "0x591"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1419": {
      "op": "DUP5"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1424": {
      "jump": "i",
      "op": "JUMP"
    },
    "1425": {
      "op": "JUMPDEST"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1428": {
      "op": "DUP3"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "op": "MSTORE"
    },
    "1431": {
      "op": "PUSH2",
      "value": "0x5A2"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1436": {
      "op": "DUP5"
    },
    "1437": {
      "op": "ADD"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1441": {
      "jump": "i",
      "op": "JUMP"
    },
    "1442": {
      "op": "JUMPDEST"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1445": {
      "op": "DUP3"
    },
    "1446": {
      "op": "ADD"
    },
    "1447": {
      "op": "MSTORE"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1450": {
      "op": "DUP4"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "op": "CALLDATALOAD"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "DUP4"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "CALLDATALOAD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "DUP3"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "MSTORE"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1470": {
      "op": "DUP4"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "CALLDATALOAD"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1475": {
      "op": "DUP3"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1480": {
      "op": "DUP4"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "op": "CALLDATALOAD"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "GT"
    },
    "1486": {
      "op": "ISZERO"
    },
    "1487": {
      "op": "PUSH2",
      "value": "0x5D7"
    },
    "1490": {
      "op": "JUMPI"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "op": "DUP1"
    },
    "1494": {
      "op": "REVERT"
    },
    "1495": {
      "op": "JUMPDEST"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x5E3"
    },
    "1499": {
      "op": "DUP10"
    },
    "1500": {
      "op": "DUP3"
    },
    "1501": {
      "op": "DUP7"
    },
    "1502": {
      "op": "ADD"
    },
    "1503": {
      "op": "PUSH2",
      "value": "0x45E"
    },
    "1506": {
      "jump": "i",
      "op": "JUMP"
    },
    "1507": {
      "op": "JUMPDEST"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1510": {
      "op": "DUP4"
    },
    "1511": {
      "op": "ADD"
    },
    "1512": {
      "op": "MSTORE"
    },
    "1513": {
      "op": "POP"
    },
    "1514": {
      "op": "SWAP4"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1518": {
      "op": "DUP7"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "CALLDATALOAD"
    },
    "1521": {
      "op": "SWAP2"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "DUP3"
    },
    "1525": {
      "op": "GT"
    },
    "1526": {
      "op": "ISZERO"
    },
    "1527": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1530": {
      "op": "JUMPI"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1533": {
      "op": "DUP1"
    },
    "1534": {
      "op": "REVERT"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x60C"
    },
    "1540": {
      "op": "DUP7"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "DUP8"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "PUSH2",
      "value": "0x45E"
    },
    "1547": {
      "jump": "i",
      "op": "JUMP"
    },
    "1548": {
      "op": "JUMPDEST"
    },
    "1549": {
      "op": "SWAP2"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "op": "SWAP3"
    },
    "1553": {
      "op": "POP"
    },
    "1554": {
      "op": "SWAP3"
    },
    "1555": {
      "op": "POP"
    },
    "1556": {
      "op": "SWAP3"
    },
    "1557": {
      "jump": "o",
      "op": "JUMP"
    },
    "1558": {
      "op": "JUMPDEST"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "DUP5"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "op": "SLT"
    },
    "1567": {
      "op": "ISZERO"
    },
    "1568": {
      "op": "PUSH2",
      "value": "0x628"
    },
    "1571": {
      "op": "JUMPI"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1574": {
      "op": "DUP1"
    },
    "1575": {
      "op": "REVERT"
    },
    "1576": {
      "op": "JUMPDEST"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "MLOAD"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "ISZERO"
    },
    "1581": {
      "op": "ISZERO"
    },
    "1582": {
      "op": "DUP2"
    },
    "1583": {
      "op": "EQ"
    },
    "1584": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1587": {
      "op": "JUMPI"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1590": {
      "op": "DUP1"
    },
    "1591": {
      "op": "REVERT"
    },
    "1592": {
      "op": "JUMPDEST"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1595": {
      "op": "DUP1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1600": {
      "op": "DUP5"
    },
    "1601": {
      "op": "DUP7"
    },
    "1602": {
      "op": "SUB"
    },
    "1603": {
      "op": "SLT"
    },
    "1604": {
      "op": "ISZERO"
    },
    "1605": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "1608": {
      "op": "JUMPI"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1611": {
      "op": "DUP1"
    },
    "1612": {
      "op": "REVERT"
    },
    "1613": {
      "op": "JUMPDEST"
    },
    "1614": {
      "op": "DUP4"
    },
    "1615": {
      "op": "CALLDATALOAD"
    },
    "1616": {
      "op": "SWAP3"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1620": {
      "op": "DUP5"
    },
    "1621": {
      "op": "ADD"
    },
    "1622": {
      "op": "CALLDATALOAD"
    },
    "1623": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "DUP3"
    },
    "1634": {
      "op": "GT"
    },
    "1635": {
      "op": "ISZERO"
    },
    "1636": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "1639": {
      "op": "JUMPI"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1642": {
      "op": "DUP1"
    },
    "1643": {
      "op": "REVERT"
    },
    "1644": {
      "op": "JUMPDEST"
    },
    "1645": {
      "op": "DUP2"
    },
    "1646": {
      "op": "DUP7"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "op": "SWAP2"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "op": "DUP7"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1653": {
      "op": "DUP4"
    },
    "1654": {
      "op": "ADD"
    },
    "1655": {
      "op": "SLT"
    },
    "1656": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "1659": {
      "op": "JUMPI"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1662": {
      "op": "DUP1"
    },
    "1663": {
      "op": "REVERT"
    },
    "1664": {
      "op": "JUMPDEST"
    },
    "1665": {
      "op": "DUP2"
    },
    "1666": {
      "op": "CALLDATALOAD"
    },
    "1667": {
      "op": "DUP2"
    },
    "1668": {
      "op": "DUP2"
    },
    "1669": {
      "op": "GT"
    },
    "1670": {
      "op": "ISZERO"
    },
    "1671": {
      "op": "PUSH2",
      "value": "0x68F"
    },
    "1674": {
      "op": "JUMPI"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1677": {
      "op": "DUP1"
    },
    "1678": {
      "op": "REVERT"
    },
    "1679": {
      "op": "JUMPDEST"
    },
    "1680": {
      "op": "DUP8"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "DUP6"
    },
    "1685": {
      "op": "ADD"
    },
    "1686": {
      "op": "ADD"
    },
    "1687": {
      "op": "GT"
    },
    "1688": {
      "op": "ISZERO"
    },
    "1689": {
      "op": "PUSH2",
      "value": "0x6A1"
    },
    "1692": {
      "op": "JUMPI"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1695": {
      "op": "DUP1"
    },
    "1696": {
      "op": "REVERT"
    },
    "1697": {
      "op": "JUMPDEST"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1700": {
      "op": "DUP4"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "SWAP5"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "op": "DUP1"
    },
    "1705": {
      "op": "SWAP4"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "op": "SWAP3"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "op": "SWAP3"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "op": "SWAP3"
    },
    "1715": {
      "jump": "o",
      "op": "JUMP"
    },
    "1716": {
      "op": "JUMPDEST"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1719": {
      "op": "DUP1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1722": {
      "op": "DUP4"
    },
    "1723": {
      "op": "DUP6"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "op": "SLT"
    },
    "1726": {
      "op": "ISZERO"
    },
    "1727": {
      "op": "PUSH2",
      "value": "0x6C7"
    },
    "1730": {
      "op": "JUMPI"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1733": {
      "op": "DUP1"
    },
    "1734": {
      "op": "REVERT"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "op": "DUP1"
    },
    "1739": {
      "op": "MLOAD"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1742": {
      "op": "SWAP1"
    },
    "1743": {
      "op": "SWAP2"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "op": "MLOAD"
    },
    "1746": {
      "op": "SWAP1"
    },
    "1747": {
      "op": "SWAP3"
    },
    "1748": {
      "op": "SWAP1"
    },
    "1749": {
      "op": "SWAP2"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "jump": "o",
      "op": "JUMP"
    },
    "1752": {
      "op": "JUMPDEST"
    },
    "1753": {
      "op": "DUP2"
    },
    "1754": {
      "op": "DUP4"
    },
    "1755": {
      "op": "DUP3"
    },
    "1756": {
      "op": "CALLDATACOPY"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1759": {
      "op": "SWAP2"
    },
    "1760": {
      "op": "ADD"
    },
    "1761": {
      "op": "SWAP1"
    },
    "1762": {
      "op": "DUP2"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "SWAP2"
    },
    "1765": {
      "op": "SWAP1"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "jump": "o",
      "op": "JUMP"
    },
    "1768": {
      "op": "JUMPDEST"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1771": {
      "op": "DUP1"
    },
    "1772": {
      "op": "DUP3"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "DUP2"
    },
    "1775": {
      "op": "DUP2"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "MSTORE"
    },
    "1778": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1813": {
      "op": "DUP3"
    },
    "1814": {
      "op": "ADD"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1818": {
      "op": "ADD"
    },
    "1819": {
      "op": "SWAP1"
    },
    "1820": {
      "jump": "o",
      "op": "JUMP"
    },
    "1821": {
      "op": "JUMPDEST"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1824": {
      "op": "MLOAD"
    },
    "1825": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1839": {
      "op": "DUP2"
    },
    "1840": {
      "op": "GT"
    },
    "1841": {
      "op": "DUP3"
    },
    "1842": {
      "op": "DUP3"
    },
    "1843": {
      "op": "LT"
    },
    "1844": {
      "op": "OR"
    },
    "1845": {
      "op": "ISZERO"
    },
    "1846": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "1849": {
      "op": "JUMPI"
    },
    "1850": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "1853": {
      "op": "PUSH2",
      "value": "0x771"
    },
    "1856": {
      "jump": "i",
      "op": "JUMP"
    },
    "1857": {
      "op": "JUMPDEST"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1860": {
      "op": "MSTORE"
    },
    "1861": {
      "op": "SWAP1"
    },
    "1862": {
      "jump": "o",
      "op": "JUMP"
    },
    "1863": {
      "op": "JUMPDEST"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1866": {
      "op": "DUP1"
    },
    "1867": {
      "op": "DUP6"
    },
    "1868": {
      "op": "DUP6"
    },
    "1869": {
      "op": "GT"
    },
    "1870": {
      "op": "ISZERO"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "1874": {
      "op": "JUMPI"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1877": {
      "op": "DUP1"
    },
    "1878": {
      "op": "REVERT"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "DUP4"
    },
    "1881": {
      "op": "DUP7"
    },
    "1882": {
      "op": "GT"
    },
    "1883": {
      "op": "ISZERO"
    },
    "1884": {
      "op": "PUSH2",
      "value": "0x764"
    },
    "1887": {
      "op": "JUMPI"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1890": {
      "op": "DUP1"
    },
    "1891": {
      "op": "REVERT"
    },
    "1892": {
      "op": "JUMPDEST"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "op": "DUP3"
    },
    "1896": {
      "op": "ADD"
    },
    "1897": {
      "op": "SWAP4"
    },
    "1898": {
      "op": "SWAP2"
    },
    "1899": {
      "op": "SWAP1"
    },
    "1900": {
      "op": "SWAP3"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "op": "SWAP2"
    },
    "1903": {
      "op": "POP"
    },
    "1904": {
      "jump": "o",
      "op": "JUMP"
    },
    "1905": {
      "op": "JUMPDEST"
    },
    "1906": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1913": {
      "op": "SHL"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1926": {
      "op": "REVERT"
    },
    "1927": {
      "op": "JUMPDEST"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1934": {
      "op": "SHL"
    },
    "1935": {
      "op": "SUB"
    },
    "1936": {
      "op": "DUP2"
    },
    "1937": {
      "op": "AND"
    },
    "1938": {
      "op": "DUP2"
    },
    "1939": {
      "op": "EQ"
    },
    "1940": {
      "op": "PUSH2",
      "value": "0x79C"
    },
    "1943": {
      "op": "JUMPI"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1946": {
      "op": "DUP1"
    },
    "1947": {
      "op": "REVERT"
    },
    "1948": {
      "op": "JUMPDEST"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4f46ee550d530eefa9b28e5edda552d86228fb26",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"./../interfaces/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract SwapProxy is Ownable {\n\n    struct SwapDescription {\n        IERC20 srcToken;\n        IERC20 dstToken;\n        address srcReceiver;\n        address dstReceiver;\n        uint256 amount;\n        uint256 minReturnAmount;\n        uint256 flags;\n        bytes permit;\n    }\n\n    address immutable AGGREGATION_ROUTER_V3;\n\n    constructor(address router) {\n        AGGREGATION_ROUTER_V3 = router;\n    }\n\n    function swap(uint minOut, bytes calldata _data) external onlyOwner {\n        (address _c, SwapDescription memory desc, bytes memory _d) = abi.decode(_data[4:], (address, SwapDescription, bytes));\n\n        IERC20(desc.srcToken).transferFrom(msg.sender, address(this), desc.amount);\n        IERC20(desc.srcToken).approve(AGGREGATION_ROUTER_V3, desc.amount);\n\n        (bool succ, bytes memory _data) = address(AGGREGATION_ROUTER_V3).call(_data);\n        if (succ) {\n            (uint returnAmount, uint gasLeft) = abi.decode(_data, (uint, uint));\n            require(returnAmount >= minOut);\n        } else {\n            revert();\n        }\n    }\n}",
  "sourceMap": "149:1056:2:-:0;;;478:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;909:18;;-1:-1:-1;;;;;;909:18:0;665:10:1;909:18:0;;;;;942:43;;665:10:1;;;;942:43:0;;867:17;;942:43;-1:-1:-1;516:30:2;;-1:-1:-1;;;;;;516:30:2;;;149:1056;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;:::-;149:1056:2;;;;;;;;;;;;",
  "sourcePath": "contracts/SwapProxy.sol",
  "type": "contract"
}